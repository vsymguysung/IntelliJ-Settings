<application>
  <component name="VimEditorSettings">
    <editor />
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry encoding="base64">XDxoYW5kbGVJbnRlbnRSZXNwb25zZVw+</entry>
        <entry encoding="base64">XDxnX3Byb2Nlc3Nvclw+</entry>
        <entry encoding="base64">XDxnX2RpYWxvZ1w+</entry>
        <entry encoding="base64">XDxjb25maWd1cmVVc2VyTWVkaWFDYWxsYmFja1w+</entry>
        <entry encoding="base64">XDxlcnJvck1lc3NhZ2VcPg==</entry>
        <entry encoding="base64">XDxnX2F1ZGlvX3N0cmVhbV9zb3VyY2VcPg==</entry>
        <entry encoding="base64">XDxnX3NjcmlwdFByb2Nlc3Nvclw+</entry>
        <entry encoding="base64">XDxnX2F1ZGlvU3RyZWFtU291cmNlXD4=</entry>
        <entry encoding="base64">XDxnX2F1ZGlvQ29udGV4dFw+</entry>
        <entry encoding="base64">XDxnX3JlU2FtcGxlclw+</entry>
        <entry encoding="base64">XDxzdXBwb3J0c0dldFVzZXJNZWRpYVw+</entry>
        <entry encoding="base64">XDxBdWRpb0NvbnRleHRDbGFzc1w+</entry>
        <entry encoding="base64">XDxnX3N1cHBvcnRzQXVkaW9Db250ZXh0XD4=</entry>
        <entry encoding="base64">XDxtZWRpYVN0cmVhbVNvdXJjZVw+</entry>
        <entry encoding="base64">XDxzdGFydFNlc3Npb25cPg==</entry>
        <entry encoding="base64">XDxpbml0aWFsaXplQXVkaW9TdHJlYW1cPg==</entry>
        <entry encoding="base64">XDxnX3N1cHBvcnRzR2V0VXNlck1lZGlhXD4=</entry>
        <entry encoding="base64">XDxCT1RfVkVSU0lPTl9RVUVSWV9QQVJBTVw+</entry>
        <entry encoding="base64">XDxKV1RfUVVFUllfUEFSQU1cPg==</entry>
        <entry encoding="base64">XDxjb25zdFw+</entry>
      </history-search>
      <history-cmd>
        <entry>53,64 %s/&quot;/'/gc</entry>
        <entry>23,34%s/&quot;/'/gc</entry>
        <entry>29,32%s/&quot;/'/gc</entry>
        <entry>28,54%s/&quot;/'/gc</entry>
        <entry>28,55s/&quot;/'/c</entry>
        <entry>28,55s/&quot;/'/gc</entry>
        <entry>32,55s/&quot;/'/gc</entry>
        <entry>128,138s/&quot;/'/gc</entry>
        <entry>w'</entry>
        <entry>s/host\.docker\.internal/localhost/g</entry>
        <entry>s/host\.docker\.internal/localhost/gc</entry>
        <entry>%s/host\.docker\.internal/localhost/gc</entry>
        <entry>W</entry>
        <entry>qw</entry>
        <entry>wq</entry>
        <entry>q</entry>
        <entry>nohl</entry>
        <entry encoding="base64">JzwsJz53</entry>
        <entry>:w</entry>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/GenDev/loquentia/src/main/java/com/genesys/loquentia/botproviders/cicero/CiceroSession.java" timestamp="1592568309011">
        <mark key="'" line="69" column="18" />
        <mark key="[" line="176" column="105" />
        <mark key="]" line="177" column="38" />
        <mark key="^" line="177" column="38" />
        <mark key="." line="177" column="37" />
      </file>
      <file name="$USER_HOME$/GenDev/loquentia/src/main/java/com/genesys/loquentia/sttproviders/STTSessionCallbackImplV1.java" timestamp="1592568731373">
        <mark key="'" line="31" column="36" />
        <mark key="[" line="44" column="8" />
        <mark key="]" line="44" column="12" />
        <mark key="." line="44" column="8" />
        <mark key="^" line="44" column="12" />
      </file>
      <file name="$USER_HOME$/GenDev/loquentia/src/test/java/com/genesys/loquentia/botproviders/cicero/CiceroSessionTest.java" timestamp="1592408181721">
        <mark key="[" line="193" column="47" />
        <mark key="]" line="93" column="86" />
        <mark key="^" line="93" column="86" />
        <mark key="." line="93" column="85" />
      </file>
      <file name="$USER_HOME$/GenDev/loquentia/src/main/java/com/genesys/loquentia/botproviders/cicero/model/Error.java" timestamp="1592856521453" />
      <file name="$USER_HOME$/GenDev/loquentia/src/main/java/com/genesys/loquentia/botproviders/cicero/model/prompts/OutputPrompts.java" timestamp="1592406581973">
        <mark key="'" line="30" column="24" />
      </file>
      <file name="$USER_HOME$/GenDev/audio-streaming/src/client/src/resampler.js" timestamp="1592510849697">
        <mark key="'" line="28" column="34" />
        <mark key="[" line="31" column="0" />
        <mark key="]" line="31" column="0" />
        <mark key="." line="31" column="0" />
      </file>
      <file name="$APPLICATION_HOME_DIR$/plugins/JavaScriptLanguage/jsLanguageServicesImpl/external/lib.dom.d.ts" timestamp="1592513470306">
        <mark key="[" line="10292" column="10" />
        <mark key="]" line="10292" column="21" />
      </file>
      <file name="$USER_HOME$/GenDev/Teach-ReactiveSpring/learn-reactivespring/src/main/java/com/learnreactivespring/repository/ItemReactiveCappedRepository.java" timestamp="1592567992751">
        <mark key="'" line="13" column="25" />
      </file>
      <file name="$USER_HOME$/GenDev/Teach-ReactiveSpring/learn-reactivespring/src/main/java/com/learnreactivespring/controller/v1/ItemController.java" timestamp="1592568030868">
        <mark key="'" line="86" column="74" />
      </file>
      <file name="/Dummy.txt" timestamp="1592842067208">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/GenDev/loquentia/src/main/java/com/genesys/loquentia/sttproviders/STTRecognitionHandlerImplV1.java" timestamp="1592568520946">
        <mark key="'" line="9" column="32" />
      </file>
      <file name="$USER_HOME$/GenDev/loquentia/src/main/java/com/genesys/loquentia/botproviders/AbstractBotSessionV1.java" timestamp="1592568896989">
        <mark key="'" line="91" column="29" />
      </file>
      <file name="$USER_HOME$/GenDev/loquentia/src/main/java/com/genesys/loquentia/botproviders/SttTtsBotSessionV1.java" timestamp="1592568512732">
        <mark key="'" line="76" column="41" />
      </file>
      <file name="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" timestamp="1592860679012">
        <mark key="'" line="333" column="8" />
        <mark key="[" line="54" column="0" />
        <mark key="]" line="54" column="0" />
        <mark key="." line="54" column="0" />
        <mark key="^" line="27" column="0" />
      </file>
      <file name="$USER_HOME$/GenDev/Teach-ReactiveSpring/learn-reactivespring/src/test/java/com/learnreactivespring/handler/ItemStreamsHandlerTest.java" timestamp="1592567846460">
        <mark key="'" line="51" column="19" />
      </file>
      <file name="$USER_HOME$/GenDev/audio-streaming/src/client/package.json" timestamp="1592566041716">
        <mark key="[" line="31" column="0" />
        <mark key="]" line="31" column="0" />
        <mark key="." line="31" column="0" />
      </file>
      <file name="$USER_HOME$/GenDev/loquentia/src/main/java/com/genesys/loquentia/botproviders/cicero/CiceroProvider.java" timestamp="1592568592284">
        <mark key="'" line="128" column="51" />
      </file>
      <file name="$USER_HOME$/GenDev/Teach-ReactiveSpring/learn-reactivespring/src/main/java/com/learnreactivespring/repository/ItemReactiveRepository.java" timestamp="1592567928038">
        <mark key="'" line="9" column="15" />
      </file>
      <file name="/fragment.java" timestamp="1592842067197">
        <mark key="[" line="0" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="1343" column="16" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="556" column="22" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1344" column="29" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1280" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1195" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1191" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="666" column="33" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="665" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="577" column="17" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="558" column="7" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="681" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1338" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="565" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1221" column="20" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="673" column="16" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1224" column="18" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="567" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="435" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="451" column="21" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="453" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="671" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="608" column="40" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="599" column="35" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="597" column="16" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="590" column="16" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="579" column="16" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="578" column="17" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="108" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="669" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="593" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="582" column="16" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="581" column="17" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="569" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="571" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="458" column="31" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="670" column="39" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="588" column="17" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="589" column="16" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="596" column="16" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="598" column="35" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="607" column="73" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="110" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="683" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="109" column="7" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="566" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1340" column="23" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="122" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1237" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="559" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="553" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1218" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1074" column="25" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1049" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1045" column="31" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1208" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1212" column="11" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1242" column="26" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1300" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1378" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1377" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1245" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1249" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1176" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1047" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1073" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1308" column="27" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1307" column="27" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1216" column="17" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1050" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1220" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1092" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1052" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1181" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1342" column="20" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="562" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="554" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1064" column="63" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1080" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1078" column="15" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1055" column="33" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1194" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="107" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1283" column="27" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1081" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1067" column="12" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="104" column="4" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="0" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1357" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1352" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1354" column="2" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="54" column="6" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="55" column="6" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="53" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="50" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="49" column="0" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1186" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1084" column="35" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="1345" column="23" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="561" column="9" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
      <jump line="333" column="8" filename="$USER_HOME$/GenDev/audio-streaming/src/client/src/app.js" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">Y29uc3QgQk9UX1ZFUlNJT05fUVVFUllfUEFSQU0gPSAnYm90dmVyc2lvbic7Cg==</text>
      </register>
      <register name="-" type="4">
        <text encoding="base64">bWVkaWFTdHJlYW1Tb3VyY2Ug</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxjb25zdFw+</text>
      </register>
      <register name="0" type="4">
        <text>ScriptProcessorNode</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Y29uc3QgQk9UX1ZFUlNJT05fUVVFUllfUEFSQU0gPSAnYm90dmVyc2lvbic7Cg==</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Y29uc3QgSldUX1FVRVJZX1BBUkFNID0gJ2p3dCc7Cg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Ly8K</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">Ly8gSW52b2tlIHRoZSBmdW5jdGlvbiBvbmx5IG9uY2Ugd2hlbiBET00gaXMgcmVhZHkuCg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgIGxldCBzY3JpcHRQcm9jZXNzb3IgPSBudWxsOwo=</text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-search encoding="base64">XDxjb25zdFw+</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxjb25zdFw+</last-pattern>
      <last-replace>localhost</last-replace>
      <last-substitute encoding="base64">XDxkZWZhdWx0RXhlY3V0b3JTZXJ2aWNlXD4=</last-substitute>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="true" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>